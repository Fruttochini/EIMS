@model EIMS.Models.CreateEditTaskViewModel

@{
    ViewBag.Title = "Create Task";
}

<h3>Create new Task</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.taskID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.taskID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.taskID, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @Html.HiddenFor(m => m.lessonDateID)
        @Html.HiddenFor(m => m.groupID)
        @Html.HiddenFor(m => m.loid)
        @Html.HiddenFor(m => m.subjectID)
        @*<div class="form-group">
            @Html.LabelFor(model => model.lessonDateID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lessonDateID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lessonDateID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.homeTask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.homeTask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.homeTask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.expireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.expireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.expireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.SelectGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectGroup, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelectGroup, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SelectDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelectDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "CreateLessonPrecense", "LessonPrecense", new { lessonDateID = Model.lessonDateID, groupID = Model.groupID, subjectID = Model.subjectID, loid = Model.loid },null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
